--
-- generate_bat_theme.lua
--

local vim = vim
local bit = bit
local utils = require('rc.utils')

local function script_path()
   local str = debug.getinfo(2, "S").source:sub(2)
   return str:match("(.*/)")
end

local dirname = vim.fn.fnamemodify(script_path(), ':h')
local template_path = utils.join(dirname, './template.tmTheme')
local template = table.concat(vim.fn.readfile(template_path), '\n')


local function to_hex(value)
  local r = bit.band(bit.rshift(value, 16), 0xff)
  local g = bit.band(bit.rshift(value,  8), 0xff)
  local b = bit.band(bit.rshift(value,  0), 0xff)

  --%02x: 0 means replace " "s with "0"s, 2 is width, x means hex
  return string.format("#%02x%02x%02x", r, g, b)
end

local function get_fg(name)
  local success, hl = pcall(vim.api.nvim_get_hl_by_name, name, true)
  if success then
    return to_hex(hl.foreground)
  end
end

function generate_bat_theme()

  local variables = {
    name = vim.g.colors_name or 'autogenerated-bat-theme',
    -- Colors
    normal       = get_fg('normal'),
    identifier   = get_fg('identifier') or get_fg('normal'),
    keyword      = get_fg('keyword'),
    operator      = get_fg('keyword'),
    comment      = get_fg('comment'),
    number       = get_fg('number'),
    boolean      = get_fg('boolean'),
    string       = get_fg('string'),
    escaped      = get_fg('char') or get_fg('specialkey') or get_fg('string'),
    ['function'] = get_fg('function'),
    builtin = get_fg('builtin') or get_fg('special') or get_fg('function'),
    title        = get_fg('title'),
    link         = get_fg('link') or get_fg('url') or get_fg('tag') or '#599eff',
    include        = get_fg('include'),
    type        = get_fg('type') or get_fg('keyword'),
  }

  local keys = vim.tbl_keys(variables)

  local result = template
  for _, key in ipairs(keys) do
    result = string.gsub(result, '{{' .. key .. '}}', variables[key])
  end

  vim.fn.writefile(
    vim.split(result, '\n'),
    '/home/romgrk/.config/bat/themes/neovim.tmTheme',
    ''
  )

  return result
end

generate_bat_theme()
