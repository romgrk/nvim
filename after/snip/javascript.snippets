
snippet div "div" b
<div className='$0'>
</div>
endsnippet
snippet table "table" b
<table>
<tbody>
	<tr>
		<td></td>
		<td></td>
	</tr>
</tbody>
</table>
endsnippet

snippet i "import" b
import $1 from '${2:$1}'
endsnippet
snippet cx "classname"
import cx from 'clsx'
endsnippet
snippet R "React"
import React from 'react'
endsnippet

snippet * "comment" b
/*
 * $0
 */
endsnippet
snippet ** "comment" b
/**
 * $0
 */
endsnippet
snippet rnp "new Promise"
return new Promise((resolve, reject) => {
	$0
})
endsnippet

# React

snippet react "import React" 
import React from 'react'
endsnippet

snippet cns "constructor" b
constructor(props) {
	super(props)
	$0
}
endsnippet

# Other

snippet ppl "log" 
console.log(require('util').inspect($0, { colors: true, depth: 3 }))
endsnippet

snippet utilcolor "desc" 
const util = require('util')
util.inspect.defaultOptions =  { colors: true, depth: 3 }
endsnippet

snippet $ "query"
document.querySelector($0)
endsnippet

snippet $$ "queryAll"
document.querySelectorAll($0)
endsnippet

snippet ii "import" b
import { $1 } from '$0'
endsnippet

#requires
snippet req "require" b
const $1 = require('${1:${2:module}}')
endsnippet

snippet "\b((\w|\d|_|\$)+)\.on" ".on(..)" rb
`!p snip.rv = match.group(1)`.on("${1:event}", (${2:event}) => {${3:do}});
endsnippet

#===========
# Language:
#===========

snippet if "if" b
if (${1:expr}) {
}
endsnippet
snippet elif "else if" 
else if ($0)} { 
}
endsnippet
snippet else "else" b
else { 
	$0
}
endsnippet


# Utils

snippet fs "fs = require..." b
const fs = require('fs')
endsnippet
snippet util "util = require..." b
const util = require('util')
endsnippet
snippet path "path = require..." b
const path = require('path')
endsnippet

snippet l "log" b
console.log($0)
endsnippet

snippet exit "process.exit" b
process.exit(${1:0})
endsnippet

### Functions:

snippet fn "function"
function ${1:name}(${2:args}) {
	$0
}
endsnippet

#snippet fun
#function ${1:function_name}(${2:argument}) {
#${3:// body...}
#}
#endsnippet

# try
snippet try
try {
	${0:/* code */}
} catch (e) {}
endsnippet

snippet th "throw new Error()" b
throw new Error('$0')
endsnippet

# hasOwnProperty
snippet has
hasOwnProperty(${1})
endsnippet

# JSON.parse
snippet jsp
JSON.parse(${1:jstr})
endsnippet
# JSON.stringify
snippet jss
JSON.stringify(${1:object})
endsnippet
